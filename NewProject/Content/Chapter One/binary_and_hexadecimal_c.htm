<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../Resources/Stylesheets/Chapter One.css" rel="stylesheet" />
    </head>
    <body><pre>binary and hexadecimal code</pre>
        <p>As mentioned, computers run in binary code. While many -- if not most -- programmers will not have need of programming in binary code, it can be useful for certain operations, most notably as a status indicator: a particular bit is on or off, showing the status of an object. Binary, or bitwise, operations are also useful for memory management, where maximum computational speed is desired, or to communicate with hardware using the least abstraction. For those that are familiar with this material, just skip it. Otherwise, read on, and behold.</p>
        <p>Let’s begin with ordinary decimal numbers as a starting point. The number 4444 can be represented as:</p>
        <p>4 * (10 X 10 X 10) + 4 * (10 X 10) + 4 * 10 + 4</p>
        <p>Put another way, it is 4E3 + 4E2 + 4E1 + 4E0. The exponents here are powers of ten; that’s what base ten means.</p>
        <p>Binary and hexadecimal numbers work the same way, with the exponents being two and sixteen, respectively. The binary number 1110 becomes:</p>
        <p>1 * (2 X 2 X 2) + 1 * (2 X 2) + 1 * 2 + 0 =</p>
        <p>8 + 4 + 2 + 0 = 14</p>
        <p>We run out of numerals using hexadecimal notation; 0-9 carry us only up to base 10, so the remaining 6 places use the letters A--F. The number 1AB3, we can infer by now, is:</p>
        <p>1 * (16 X 16 * 16) + 10 * (16 X 16) + 11 * 16 + 3 = 6835</p>
        <p>&#160;</p>
    </body>
</html>